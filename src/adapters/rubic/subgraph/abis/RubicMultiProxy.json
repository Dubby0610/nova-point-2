[
  { "name": "CannotAuthoriseSelf", "type": "error", "inputs": [] },
  { "name": "OnlyContractOwner", "type": "error", "inputs": [] },
  {
    "name": "ExecutionAllowed",
    "type": "event",
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "method",
        "type": "bytes4",
        "indexed": true,
        "internalType": "bytes4"
      }
    ],
    "anonymous": false
  },
  {
    "name": "ExecutionDenied",
    "type": "event",
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "method",
        "type": "bytes4",
        "indexed": true,
        "internalType": "bytes4"
      }
    ],
    "anonymous": false
  },
  {
    "name": "addressCanExecuteMethod",
    "type": "function",
    "inputs": [
      { "name": "_selector", "type": "bytes4", "internalType": "bytes4" },
      { "name": "_executor", "type": "address", "internalType": "address" }
    ],
    "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
    "stateMutability": "view"
  },
  {
    "name": "setCanExecute",
    "type": "function",
    "inputs": [
      { "name": "_selector", "type": "bytes4", "internalType": "bytes4" },
      { "name": "_executor", "type": "address", "internalType": "address" },
      { "name": "_canExecute", "type": "bool", "internalType": "bool" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  { "name": "CannotAuthoriseSelf", "type": "error", "inputs": [] },
  { "name": "InvalidContract", "type": "error", "inputs": [] },
  { "name": "UnAuthorized", "type": "error", "inputs": [] },
  {
    "name": "DexAdded",
    "type": "event",
    "inputs": [
      {
        "name": "dexAddress",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "name": "DexRemoved",
    "type": "event",
    "inputs": [
      {
        "name": "dexAddress",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "name": "FunctionSignatureApprovalChanged",
    "type": "event",
    "inputs": [
      {
        "name": "functionSignature",
        "type": "bytes4",
        "indexed": true,
        "internalType": "bytes4"
      },
      {
        "name": "approved",
        "type": "bool",
        "indexed": true,
        "internalType": "bool"
      }
    ],
    "anonymous": false
  },
  {
    "name": "addDex",
    "type": "function",
    "inputs": [
      { "name": "_dex", "type": "address", "internalType": "address" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "approvedDexs",
    "type": "function",
    "inputs": [],
    "outputs": [
      { "name": "addresses", "type": "address[]", "internalType": "address[]" }
    ],
    "stateMutability": "view"
  },
  {
    "name": "batchAddDex",
    "type": "function",
    "inputs": [
      { "name": "_dexs", "type": "address[]", "internalType": "address[]" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "batchRemoveDex",
    "type": "function",
    "inputs": [
      { "name": "_dexs", "type": "address[]", "internalType": "address[]" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "batchSetFunctionApprovalBySignature",
    "type": "function",
    "inputs": [
      { "name": "_signatures", "type": "bytes4[]", "internalType": "bytes4[]" },
      { "name": "_approval", "type": "bool", "internalType": "bool" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "isContractApproved",
    "type": "function",
    "inputs": [
      { "name": "_contract", "type": "address", "internalType": "address" }
    ],
    "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
    "stateMutability": "view"
  },
  {
    "name": "isFunctionApproved",
    "type": "function",
    "inputs": [
      { "name": "_signature", "type": "bytes4", "internalType": "bytes4" }
    ],
    "outputs": [{ "name": "approved", "type": "bool", "internalType": "bool" }],
    "stateMutability": "view"
  },
  {
    "name": "removeDex",
    "type": "function",
    "inputs": [
      { "name": "_dex", "type": "address", "internalType": "address" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "setFunctionApprovalBySignature",
    "type": "function",
    "inputs": [
      { "name": "_signature", "type": "bytes4", "internalType": "bytes4" },
      { "name": "_approval", "type": "bool", "internalType": "bool" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  { "name": "CalldataEmptyButInitNotZero", "type": "error", "inputs": [] },
  { "name": "FacetAddressIsNotZero", "type": "error", "inputs": [] },
  { "name": "FacetAddressIsZero", "type": "error", "inputs": [] },
  { "name": "FacetContainsNoCode", "type": "error", "inputs": [] },
  { "name": "FunctionAlreadyExists", "type": "error", "inputs": [] },
  { "name": "FunctionDoesNotExist", "type": "error", "inputs": [] },
  { "name": "FunctionIsImmutable", "type": "error", "inputs": [] },
  { "name": "IncorrectFacetCutAction", "type": "error", "inputs": [] },
  { "name": "InitReverted", "type": "error", "inputs": [] },
  { "name": "InitZeroButCalldataNotEmpty", "type": "error", "inputs": [] },
  { "name": "NoSelectorsInFace", "type": "error", "inputs": [] },
  { "name": "OnlyContractOwner", "type": "error", "inputs": [] },
  {
    "name": "DiamondCut",
    "type": "event",
    "inputs": [
      {
        "name": "_diamondCut",
        "type": "tuple[]",
        "indexed": false,
        "components": [
          {
            "name": "facetAddress",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "action",
            "type": "uint8",
            "internalType": "enum IDiamondCut.FacetCutAction"
          },
          {
            "name": "functionSelectors",
            "type": "bytes4[]",
            "internalType": "bytes4[]"
          }
        ],
        "internalType": "struct IDiamondCut.FacetCut[]"
      },
      {
        "name": "_init",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "_calldata",
        "type": "bytes",
        "indexed": false,
        "internalType": "bytes"
      }
    ],
    "anonymous": false
  },
  {
    "name": "diamondCut",
    "type": "function",
    "inputs": [
      {
        "name": "_diamondCut",
        "type": "tuple[]",
        "components": [
          {
            "name": "facetAddress",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "action",
            "type": "uint8",
            "internalType": "enum IDiamondCut.FacetCutAction"
          },
          {
            "name": "functionSelectors",
            "type": "bytes4[]",
            "internalType": "bytes4[]"
          }
        ],
        "internalType": "struct IDiamondCut.FacetCut[]"
      },
      { "name": "_init", "type": "address", "internalType": "address" },
      { "name": "_calldata", "type": "bytes", "internalType": "bytes" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "facetAddress",
    "type": "function",
    "inputs": [
      {
        "name": "_functionSelector",
        "type": "bytes4",
        "internalType": "bytes4"
      }
    ],
    "outputs": [
      { "name": "facetAddress_", "type": "address", "internalType": "address" }
    ],
    "stateMutability": "view"
  },
  {
    "name": "facetAddresses",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "name": "facetAddresses_",
        "type": "address[]",
        "internalType": "address[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "name": "facetFunctionSelectors",
    "type": "function",
    "inputs": [
      { "name": "_facet", "type": "address", "internalType": "address" }
    ],
    "outputs": [
      {
        "name": "facetFunctionSelectors_",
        "type": "bytes4[]",
        "internalType": "bytes4[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "name": "facets",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "name": "facets_",
        "type": "tuple[]",
        "components": [
          {
            "name": "facetAddress",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "functionSelectors",
            "type": "bytes4[]",
            "internalType": "bytes4[]"
          }
        ],
        "internalType": "struct IDiamondLoupe.Facet[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "name": "supportsInterface",
    "type": "function",
    "inputs": [
      { "name": "_interfaceId", "type": "bytes4", "internalType": "bytes4" }
    ],
    "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
    "stateMutability": "view"
  },
  { "name": "AlreadyInitialized", "type": "error", "inputs": [] },
  { "name": "FeeTooHigh", "type": "error", "inputs": [] },
  { "name": "InvalidFee", "type": "error", "inputs": [] },
  { "name": "OnlyContractOwner", "type": "error", "inputs": [] },
  { "name": "ReentrancyError", "type": "error", "inputs": [] },
  { "name": "ShareTooHigh", "type": "error", "inputs": [] },
  { "name": "TokenAddressIsZero", "type": "error", "inputs": [] },
  { "name": "UnAuthorized", "type": "error", "inputs": [] },
  { "name": "ZeroAddress", "type": "error", "inputs": [] },
  {
    "name": "SetFixedNativeFee",
    "type": "event",
    "inputs": [
      {
        "name": "fee",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "SetMaxRubicPlatformFee",
    "type": "event",
    "inputs": [
      {
        "name": "fee",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "SetRubicPlatformFee",
    "type": "event",
    "inputs": [
      {
        "name": "fee",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "RubicPlatformFee",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "name": "_RubicPlatformFee",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "name": "calcTokenFees",
    "type": "function",
    "inputs": [
      { "name": "_amount", "type": "uint256", "internalType": "uint256" },
      { "name": "_integrator", "type": "address", "internalType": "address" }
    ],
    "outputs": [
      { "name": "totalFee", "type": "uint256", "internalType": "uint256" },
      { "name": "RubicFee", "type": "uint256", "internalType": "uint256" },
      { "name": "integratorFee", "type": "uint256", "internalType": "uint256" }
    ],
    "stateMutability": "view"
  },
  {
    "name": "feeTreasure",
    "type": "function",
    "inputs": [],
    "outputs": [
      { "name": "_feeTreasure", "type": "address", "internalType": "address" }
    ],
    "stateMutability": "view"
  },
  {
    "name": "fixedNativeFee",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "name": "_fixedNativeFee",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "name": "initialize",
    "type": "function",
    "inputs": [
      { "name": "_feeTreasure", "type": "address", "internalType": "address" },
      {
        "name": "_maxRubicPlatformFee",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_maxFixedNativeFee",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "integratorToFeeInfo",
    "type": "function",
    "inputs": [
      { "name": "_integrator", "type": "address", "internalType": "address" }
    ],
    "outputs": [
      {
        "name": "_info",
        "type": "tuple",
        "components": [
          { "name": "isIntegrator", "type": "bool", "internalType": "bool" },
          { "name": "tokenFee", "type": "uint32", "internalType": "uint32" },
          {
            "name": "RubicTokenShare",
            "type": "uint32",
            "internalType": "uint32"
          },
          {
            "name": "RubicFixedCryptoShare",
            "type": "uint32",
            "internalType": "uint32"
          },
          {
            "name": "fixedFeeAmount",
            "type": "uint128",
            "internalType": "uint128"
          }
        ],
        "internalType": "struct IFeesFacet.IntegratorFeeInfo"
      }
    ],
    "stateMutability": "view"
  },
  {
    "name": "maxFixedNativeFee",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "name": "_maxFixedNativeFee",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "name": "maxRubicPlatformFee",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "name": "_maxRubicPlatformFee",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "name": "setFeeTreasure",
    "type": "function",
    "inputs": [
      { "name": "_feeTreasure", "type": "address", "internalType": "address" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "setFixedNativeFee",
    "type": "function",
    "inputs": [
      {
        "name": "_fixedNativeFee",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "setIntegratorInfo",
    "type": "function",
    "inputs": [
      { "name": "_integrator", "type": "address", "internalType": "address" },
      {
        "name": "_info",
        "type": "tuple",
        "components": [
          { "name": "isIntegrator", "type": "bool", "internalType": "bool" },
          { "name": "tokenFee", "type": "uint32", "internalType": "uint32" },
          {
            "name": "RubicTokenShare",
            "type": "uint32",
            "internalType": "uint32"
          },
          {
            "name": "RubicFixedCryptoShare",
            "type": "uint32",
            "internalType": "uint32"
          },
          {
            "name": "fixedFeeAmount",
            "type": "uint128",
            "internalType": "uint128"
          }
        ],
        "internalType": "struct IFeesFacet.IntegratorFeeInfo"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "setMaxRubicPlatformFee",
    "type": "function",
    "inputs": [
      { "name": "_maxFee", "type": "uint256", "internalType": "uint256" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "setRubicPlatformFee",
    "type": "function",
    "inputs": [
      { "name": "_platformFee", "type": "uint256", "internalType": "uint256" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  { "name": "CannotBridgeToSameNetwork", "type": "error", "inputs": [] },
  { "name": "ContractCallNotAllowed", "type": "error", "inputs": [] },
  {
    "name": "CumulativeSlippageTooHigh",
    "type": "error",
    "inputs": [
      { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
      { "name": "receivedAmount", "type": "uint256", "internalType": "uint256" }
    ]
  },
  { "name": "InformationMismatch", "type": "error", "inputs": [] },
  {
    "name": "InsufficientBalance",
    "type": "error",
    "inputs": [
      { "name": "required", "type": "uint256", "internalType": "uint256" },
      { "name": "balance", "type": "uint256", "internalType": "uint256" }
    ]
  },
  { "name": "InvalidAmount", "type": "error", "inputs": [] },
  { "name": "InvalidContract", "type": "error", "inputs": [] },
  { "name": "InvalidReceiver", "type": "error", "inputs": [] },
  { "name": "LengthMissmatch", "type": "error", "inputs": [] },
  { "name": "NativeAssetTransferFailed", "type": "error", "inputs": [] },
  { "name": "NoSwapDataProvided", "type": "error", "inputs": [] },
  { "name": "NoSwapFromZeroBalance", "type": "error", "inputs": [] },
  { "name": "NoTransferToNullAddress", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAValidSpender", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAnERC20Token", "type": "error", "inputs": [] },
  { "name": "OnlyContractOwner", "type": "error", "inputs": [] },
  { "name": "ReentrancyError", "type": "error", "inputs": [] },
  { "name": "SliceOutOfBounds", "type": "error", "inputs": [] },
  { "name": "SliceOverflow", "type": "error", "inputs": [] },
  { "name": "UnAuthorized", "type": "error", "inputs": [] },
  {
    "name": "RubicTransferCompleted",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "receivingAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "receiver",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "RubicTransferRecovered",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "receivingAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "receiver",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "SelectorToInfoUpdated",
    "type": "event",
    "inputs": [
      {
        "name": "_routers",
        "type": "address[]",
        "indexed": false,
        "internalType": "address[]"
      },
      {
        "name": "_selectors",
        "type": "bytes4[]",
        "indexed": false,
        "internalType": "bytes4[]"
      },
      {
        "name": "_infos",
        "type": "tuple[]",
        "indexed": false,
        "components": [
          { "name": "isAvailable", "type": "bool", "internalType": "bool" },
          { "name": "offset", "type": "uint256", "internalType": "uint256" }
        ],
        "internalType": "struct LibMappings.ProviderFunctionInfo[]"
      }
    ],
    "anonymous": false
  },
  {
    "name": "getSelectorInfo",
    "type": "function",
    "inputs": [
      { "name": "_router", "type": "address", "internalType": "address" },
      { "name": "_selector", "type": "bytes4", "internalType": "bytes4" }
    ],
    "outputs": [
      {
        "name": "",
        "type": "tuple",
        "components": [
          { "name": "isAvailable", "type": "bool", "internalType": "bool" },
          { "name": "offset", "type": "uint256", "internalType": "uint256" }
        ],
        "internalType": "struct LibMappings.ProviderFunctionInfo"
      }
    ],
    "stateMutability": "view"
  },
  {
    "name": "startBridgeTokensViaGenericCrossChain",
    "type": "function",
    "inputs": [
      {
        "name": "_bridgeData",
        "type": "tuple",
        "components": [
          {
            "name": "transactionId",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          { "name": "bridge", "type": "string", "internalType": "string" },
          {
            "name": "integrator",
            "type": "address",
            "internalType": "address"
          },
          { "name": "referrer", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          { "name": "receiver", "type": "address", "internalType": "address" },
          { "name": "refundee", "type": "address", "internalType": "address" },
          { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
          {
            "name": "destinationChainId",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "hasSourceSwaps", "type": "bool", "internalType": "bool" },
          {
            "name": "hasDestinationCall",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "internalType": "struct IRubic.BridgeData"
      },
      {
        "name": "_genericData",
        "type": "tuple",
        "components": [
          { "name": "router", "type": "address", "internalType": "address" },
          { "name": "callData", "type": "bytes", "internalType": "bytes" }
        ],
        "internalType": "struct GenericCrossChainFacet.GenericCrossChainData"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "name": "swapAndStartBridgeTokensViaGenericCrossChain",
    "type": "function",
    "inputs": [
      {
        "name": "_bridgeData",
        "type": "tuple",
        "components": [
          {
            "name": "transactionId",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          { "name": "bridge", "type": "string", "internalType": "string" },
          {
            "name": "integrator",
            "type": "address",
            "internalType": "address"
          },
          { "name": "referrer", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          { "name": "receiver", "type": "address", "internalType": "address" },
          { "name": "refundee", "type": "address", "internalType": "address" },
          { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
          {
            "name": "destinationChainId",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "hasSourceSwaps", "type": "bool", "internalType": "bool" },
          {
            "name": "hasDestinationCall",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "internalType": "struct IRubic.BridgeData"
      },
      {
        "name": "_swapData",
        "type": "tuple[]",
        "components": [
          { "name": "callTo", "type": "address", "internalType": "address" },
          { "name": "approveTo", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "fromAmount",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "callData", "type": "bytes", "internalType": "bytes" },
          { "name": "requiresDeposit", "type": "bool", "internalType": "bool" }
        ],
        "internalType": "struct LibSwap.SwapData[]"
      },
      {
        "name": "_genericData",
        "type": "tuple",
        "components": [
          { "name": "router", "type": "address", "internalType": "address" },
          { "name": "callData", "type": "bytes", "internalType": "bytes" }
        ],
        "internalType": "struct GenericCrossChainFacet.GenericCrossChainData"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "name": "updateSelectorInfo",
    "type": "function",
    "inputs": [
      { "name": "_routers", "type": "address[]", "internalType": "address[]" },
      { "name": "_selectors", "type": "bytes4[]", "internalType": "bytes4[]" },
      {
        "name": "_infos",
        "type": "tuple[]",
        "components": [
          { "name": "isAvailable", "type": "bool", "internalType": "bool" },
          { "name": "offset", "type": "uint256", "internalType": "uint256" }
        ],
        "internalType": "struct LibMappings.ProviderFunctionInfo[]"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  { "name": "ContractCallNotAllowed", "type": "error", "inputs": [] },
  {
    "name": "CumulativeSlippageTooHigh",
    "type": "error",
    "inputs": [
      { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
      { "name": "receivedAmount", "type": "uint256", "internalType": "uint256" }
    ]
  },
  {
    "name": "InsufficientBalance",
    "type": "error",
    "inputs": [
      { "name": "required", "type": "uint256", "internalType": "uint256" },
      { "name": "balance", "type": "uint256", "internalType": "uint256" }
    ]
  },
  { "name": "InvalidAmount", "type": "error", "inputs": [] },
  { "name": "InvalidContract", "type": "error", "inputs": [] },
  { "name": "InvalidReceiver", "type": "error", "inputs": [] },
  { "name": "NativeAssetTransferFailed", "type": "error", "inputs": [] },
  { "name": "NoSwapDataProvided", "type": "error", "inputs": [] },
  { "name": "NoSwapFromZeroBalance", "type": "error", "inputs": [] },
  { "name": "NoTransferToNullAddress", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAValidSpender", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAnERC20Token", "type": "error", "inputs": [] },
  { "name": "ReentrancyError", "type": "error", "inputs": [] },
  { "name": "SliceOutOfBounds", "type": "error", "inputs": [] },
  { "name": "SliceOverflow", "type": "error", "inputs": [] },
  {
    "name": "RubicSwappedGeneric",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "integrator",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "referrer",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "fromAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "toAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "fromAmount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "toAmount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "RubicTransferCompleted",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "receivingAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "receiver",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "RubicTransferRecovered",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "receivingAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "receiver",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "swapTokensGeneric",
    "type": "function",
    "inputs": [
      {
        "name": "_transactionId",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      { "name": "_integrator", "type": "address", "internalType": "address" },
      { "name": "_referrer", "type": "address", "internalType": "address" },
      {
        "name": "_receiver",
        "type": "address",
        "internalType": "address payable"
      },
      { "name": "_minAmount", "type": "uint256", "internalType": "uint256" },
      {
        "name": "_swapData",
        "type": "tuple[]",
        "components": [
          { "name": "callTo", "type": "address", "internalType": "address" },
          { "name": "approveTo", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "fromAmount",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "callData", "type": "bytes", "internalType": "bytes" },
          { "name": "requiresDeposit", "type": "bool", "internalType": "bool" }
        ],
        "internalType": "struct LibSwap.SwapData[]"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  { "name": "AlreadyInitialized", "type": "error", "inputs": [] },
  { "name": "CannotBridgeToSameNetwork", "type": "error", "inputs": [] },
  { "name": "ContractCallNotAllowed", "type": "error", "inputs": [] },
  {
    "name": "CumulativeSlippageTooHigh",
    "type": "error",
    "inputs": [
      { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
      { "name": "receivedAmount", "type": "uint256", "internalType": "uint256" }
    ]
  },
  { "name": "InformationMismatch", "type": "error", "inputs": [] },
  {
    "name": "InsufficientBalance",
    "type": "error",
    "inputs": [
      { "name": "required", "type": "uint256", "internalType": "uint256" },
      { "name": "balance", "type": "uint256", "internalType": "uint256" }
    ]
  },
  { "name": "InvalidAmount", "type": "error", "inputs": [] },
  { "name": "InvalidConfig", "type": "error", "inputs": [] },
  { "name": "InvalidContract", "type": "error", "inputs": [] },
  { "name": "InvalidReceiver", "type": "error", "inputs": [] },
  { "name": "InvalidRouter", "type": "error", "inputs": [] },
  { "name": "NativeAssetTransferFailed", "type": "error", "inputs": [] },
  { "name": "NoSwapDataProvided", "type": "error", "inputs": [] },
  { "name": "NoSwapFromZeroBalance", "type": "error", "inputs": [] },
  { "name": "NoTransferToNullAddress", "type": "error", "inputs": [] },
  { "name": "NotInitialized", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAValidSpender", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAnERC20Token", "type": "error", "inputs": [] },
  { "name": "OnlyContractOwner", "type": "error", "inputs": [] },
  { "name": "ReentrancyError", "type": "error", "inputs": [] },
  { "name": "SliceOutOfBounds", "type": "error", "inputs": [] },
  { "name": "SliceOverflow", "type": "error", "inputs": [] },
  {
    "name": "AnyMappingUpdated",
    "type": "event",
    "inputs": [
      {
        "name": "mappings",
        "type": "tuple[]",
        "indexed": false,
        "components": [
          {
            "name": "tokenAddress",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "anyTokenAddress",
            "type": "address",
            "internalType": "address"
          }
        ],
        "internalType": "struct MultichainFacet.AnyMapping[]"
      }
    ],
    "anonymous": false
  },
  {
    "name": "MultichainInitialized",
    "type": "event",
    "inputs": [],
    "anonymous": false
  },
  {
    "name": "MultichainRoutersUpdated",
    "type": "event",
    "inputs": [
      {
        "name": "routers",
        "type": "address[]",
        "indexed": false,
        "internalType": "address[]"
      },
      {
        "name": "allowed",
        "type": "bool[]",
        "indexed": false,
        "internalType": "bool[]"
      }
    ],
    "anonymous": false
  },
  {
    "name": "RubicTransferCompleted",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "receivingAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "receiver",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "RubicTransferRecovered",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "receivingAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "receiver",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "initMultichain",
    "type": "function",
    "inputs": [
      { "name": "anyNative", "type": "address", "internalType": "address" },
      { "name": "routers", "type": "address[]", "internalType": "address[]" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "registerRouters",
    "type": "function",
    "inputs": [
      { "name": "routers", "type": "address[]", "internalType": "address[]" },
      { "name": "allowed", "type": "bool[]", "internalType": "bool[]" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "startBridgeTokensViaMultichain",
    "type": "function",
    "inputs": [
      {
        "name": "_bridgeData",
        "type": "tuple",
        "components": [
          {
            "name": "transactionId",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          { "name": "bridge", "type": "string", "internalType": "string" },
          {
            "name": "integrator",
            "type": "address",
            "internalType": "address"
          },
          { "name": "referrer", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          { "name": "receiver", "type": "address", "internalType": "address" },
          { "name": "refundee", "type": "address", "internalType": "address" },
          { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
          {
            "name": "destinationChainId",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "hasSourceSwaps", "type": "bool", "internalType": "bool" },
          {
            "name": "hasDestinationCall",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "internalType": "struct IRubic.BridgeData"
      },
      {
        "name": "_multichainData",
        "type": "tuple",
        "components": [
          { "name": "router", "type": "address", "internalType": "address" }
        ],
        "internalType": "struct MultichainFacet.MultichainData"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "name": "swapAndStartBridgeTokensViaMultichain",
    "type": "function",
    "inputs": [
      {
        "name": "_bridgeData",
        "type": "tuple",
        "components": [
          {
            "name": "transactionId",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          { "name": "bridge", "type": "string", "internalType": "string" },
          {
            "name": "integrator",
            "type": "address",
            "internalType": "address"
          },
          { "name": "referrer", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          { "name": "receiver", "type": "address", "internalType": "address" },
          { "name": "refundee", "type": "address", "internalType": "address" },
          { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
          {
            "name": "destinationChainId",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "hasSourceSwaps", "type": "bool", "internalType": "bool" },
          {
            "name": "hasDestinationCall",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "internalType": "struct IRubic.BridgeData"
      },
      {
        "name": "_swapData",
        "type": "tuple[]",
        "components": [
          { "name": "callTo", "type": "address", "internalType": "address" },
          { "name": "approveTo", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "fromAmount",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "callData", "type": "bytes", "internalType": "bytes" },
          { "name": "requiresDeposit", "type": "bool", "internalType": "bool" }
        ],
        "internalType": "struct LibSwap.SwapData[]"
      },
      {
        "name": "_multichainData",
        "type": "tuple",
        "components": [
          { "name": "router", "type": "address", "internalType": "address" }
        ],
        "internalType": "struct MultichainFacet.MultichainData"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "name": "updateAddressMappings",
    "type": "function",
    "inputs": [
      {
        "name": "mappings",
        "type": "tuple[]",
        "components": [
          {
            "name": "tokenAddress",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "anyTokenAddress",
            "type": "address",
            "internalType": "address"
          }
        ],
        "internalType": "struct MultichainFacet.AnyMapping[]"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  { "name": "NewOwnerMustNotBeSelf", "type": "error", "inputs": [] },
  { "name": "NoNullOwner", "type": "error", "inputs": [] },
  { "name": "NoPendingOwnershipTransfer", "type": "error", "inputs": [] },
  { "name": "NotPendingOwner", "type": "error", "inputs": [] },
  { "name": "OnlyContractOwner", "type": "error", "inputs": [] },
  {
    "name": "OwnershipTransferRequested",
    "type": "event",
    "inputs": [
      {
        "name": "_from",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "_to",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "name": "OwnershipTransferred",
    "type": "event",
    "inputs": [
      {
        "name": "previousOwner",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "newOwner",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "name": "cancelOwnershipTransfer",
    "type": "function",
    "inputs": [],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "confirmOwnershipTransfer",
    "type": "function",
    "inputs": [],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "owner",
    "type": "function",
    "inputs": [],
    "outputs": [
      { "name": "owner_", "type": "address", "internalType": "address" }
    ],
    "stateMutability": "view"
  },
  {
    "name": "transferOwnership",
    "type": "function",
    "inputs": [
      { "name": "_newOwner", "type": "address", "internalType": "address" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  { "name": "OnlyContractOwner", "type": "error", "inputs": [] },
  {
    "name": "PeripheryContractRegistered",
    "type": "event",
    "inputs": [
      {
        "name": "name",
        "type": "string",
        "indexed": false,
        "internalType": "string"
      },
      {
        "name": "contractAddress",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "name": "getPeripheryContract",
    "type": "function",
    "inputs": [{ "name": "_name", "type": "string", "internalType": "string" }],
    "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
    "stateMutability": "view"
  },
  {
    "name": "registerPeripheryContract",
    "type": "function",
    "inputs": [
      { "name": "_name", "type": "string", "internalType": "string" },
      {
        "name": "_contractAddress",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "constructor",
    "inputs": [
      {
        "name": "_router",
        "type": "address",
        "internalType": "contract IStargateRouter"
      }
    ],
    "stateMutability": "nonpayable"
  },
  { "name": "AlreadyInitialized", "type": "error", "inputs": [] },
  { "name": "CannotBridgeToSameNetwork", "type": "error", "inputs": [] },
  { "name": "ContractCallNotAllowed", "type": "error", "inputs": [] },
  {
    "name": "CumulativeSlippageTooHigh",
    "type": "error",
    "inputs": [
      { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
      { "name": "receivedAmount", "type": "uint256", "internalType": "uint256" }
    ]
  },
  { "name": "InformationMismatch", "type": "error", "inputs": [] },
  {
    "name": "InsufficientBalance",
    "type": "error",
    "inputs": [
      { "name": "required", "type": "uint256", "internalType": "uint256" },
      { "name": "balance", "type": "uint256", "internalType": "uint256" }
    ]
  },
  { "name": "InvalidAmount", "type": "error", "inputs": [] },
  { "name": "InvalidConfig", "type": "error", "inputs": [] },
  { "name": "InvalidContract", "type": "error", "inputs": [] },
  { "name": "InvalidReceiver", "type": "error", "inputs": [] },
  { "name": "InvalidStargateRouter", "type": "error", "inputs": [] },
  { "name": "NativeAssetNotSupported", "type": "error", "inputs": [] },
  { "name": "NativeAssetTransferFailed", "type": "error", "inputs": [] },
  { "name": "NoSwapDataProvided", "type": "error", "inputs": [] },
  { "name": "NoSwapFromZeroBalance", "type": "error", "inputs": [] },
  { "name": "NoTransferToNullAddress", "type": "error", "inputs": [] },
  { "name": "NotInitialized", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAValidSpender", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAnERC20Token", "type": "error", "inputs": [] },
  { "name": "OnlyContractOwner", "type": "error", "inputs": [] },
  { "name": "ReentrancyError", "type": "error", "inputs": [] },
  { "name": "SliceOutOfBounds", "type": "error", "inputs": [] },
  { "name": "SliceOverflow", "type": "error", "inputs": [] },
  { "name": "UnknownLayerZeroChain", "type": "error", "inputs": [] },
  { "name": "UnknownStargatePool", "type": "error", "inputs": [] },
  {
    "name": "LayerZeroChainIdSet",
    "type": "event",
    "inputs": [
      {
        "name": "chainId",
        "type": "uint256",
        "indexed": true,
        "internalType": "uint256"
      },
      {
        "name": "layerZeroChainId",
        "type": "uint16",
        "indexed": false,
        "internalType": "uint16"
      }
    ],
    "anonymous": false
  },
  {
    "name": "RubicTransferCompleted",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "receivingAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "receiver",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "RubicTransferRecovered",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "receivingAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "receiver",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "StargateInitialized",
    "type": "event",
    "inputs": [
      {
        "name": "poolIdConfigs",
        "type": "tuple[]",
        "indexed": false,
        "components": [
          { "name": "token", "type": "address", "internalType": "address" },
          { "name": "poolId", "type": "uint16", "internalType": "uint16" }
        ],
        "internalType": "struct StargateFacet.PoolIdConfig[]"
      },
      {
        "name": "chainIdConfigs",
        "type": "tuple[]",
        "indexed": false,
        "components": [
          { "name": "chainId", "type": "uint256", "internalType": "uint256" },
          {
            "name": "layerZeroChainId",
            "type": "uint16",
            "internalType": "uint16"
          }
        ],
        "internalType": "struct StargateFacet.ChainIdConfig[]"
      }
    ],
    "anonymous": false
  },
  {
    "name": "StargatePoolIdSet",
    "type": "event",
    "inputs": [
      {
        "name": "token",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "poolId",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "initStargate",
    "type": "function",
    "inputs": [
      {
        "name": "poolIdConfigs",
        "type": "tuple[]",
        "components": [
          { "name": "token", "type": "address", "internalType": "address" },
          { "name": "poolId", "type": "uint16", "internalType": "uint16" }
        ],
        "internalType": "struct StargateFacet.PoolIdConfig[]"
      },
      {
        "name": "chainIdConfigs",
        "type": "tuple[]",
        "components": [
          { "name": "chainId", "type": "uint256", "internalType": "uint256" },
          {
            "name": "layerZeroChainId",
            "type": "uint16",
            "internalType": "uint16"
          }
        ],
        "internalType": "struct StargateFacet.ChainIdConfig[]"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "quoteLayerZeroFee",
    "type": "function",
    "inputs": [
      {
        "name": "_destinationChainId",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_stargateData",
        "type": "tuple",
        "components": [
          { "name": "dstPoolId", "type": "uint256", "internalType": "uint256" },
          {
            "name": "minAmountLD",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "dstGasForCall",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "lzFee", "type": "uint256", "internalType": "uint256" },
          {
            "name": "refundAddress",
            "type": "address",
            "internalType": "address payable"
          },
          { "name": "callTo", "type": "bytes", "internalType": "bytes" },
          { "name": "callData", "type": "bytes", "internalType": "bytes" }
        ],
        "internalType": "struct StargateFacet.StargateData"
      }
    ],
    "outputs": [
      { "name": "", "type": "uint256", "internalType": "uint256" },
      { "name": "", "type": "uint256", "internalType": "uint256" }
    ],
    "stateMutability": "view"
  },
  {
    "name": "setLayerZeroChainId",
    "type": "function",
    "inputs": [
      { "name": "_chainId", "type": "uint256", "internalType": "uint256" },
      {
        "name": "_layerZeroChainId",
        "type": "uint16",
        "internalType": "uint16"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "setStargatePoolId",
    "type": "function",
    "inputs": [
      { "name": "_token", "type": "address", "internalType": "address" },
      { "name": "_poolId", "type": "uint16", "internalType": "uint16" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "startBridgeTokensViaStargate",
    "type": "function",
    "inputs": [
      {
        "name": "_bridgeData",
        "type": "tuple",
        "components": [
          {
            "name": "transactionId",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          { "name": "bridge", "type": "string", "internalType": "string" },
          {
            "name": "integrator",
            "type": "address",
            "internalType": "address"
          },
          { "name": "referrer", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          { "name": "receiver", "type": "address", "internalType": "address" },
          { "name": "refundee", "type": "address", "internalType": "address" },
          { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
          {
            "name": "destinationChainId",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "hasSourceSwaps", "type": "bool", "internalType": "bool" },
          {
            "name": "hasDestinationCall",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "internalType": "struct IRubic.BridgeData"
      },
      {
        "name": "_stargateData",
        "type": "tuple",
        "components": [
          { "name": "dstPoolId", "type": "uint256", "internalType": "uint256" },
          {
            "name": "minAmountLD",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "dstGasForCall",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "lzFee", "type": "uint256", "internalType": "uint256" },
          {
            "name": "refundAddress",
            "type": "address",
            "internalType": "address payable"
          },
          { "name": "callTo", "type": "bytes", "internalType": "bytes" },
          { "name": "callData", "type": "bytes", "internalType": "bytes" }
        ],
        "internalType": "struct StargateFacet.StargateData"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "name": "swapAndStartBridgeTokensViaStargate",
    "type": "function",
    "inputs": [
      {
        "name": "_bridgeData",
        "type": "tuple",
        "components": [
          {
            "name": "transactionId",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          { "name": "bridge", "type": "string", "internalType": "string" },
          {
            "name": "integrator",
            "type": "address",
            "internalType": "address"
          },
          { "name": "referrer", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          { "name": "receiver", "type": "address", "internalType": "address" },
          { "name": "refundee", "type": "address", "internalType": "address" },
          { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
          {
            "name": "destinationChainId",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "hasSourceSwaps", "type": "bool", "internalType": "bool" },
          {
            "name": "hasDestinationCall",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "internalType": "struct IRubic.BridgeData"
      },
      {
        "name": "_swapData",
        "type": "tuple[]",
        "components": [
          { "name": "callTo", "type": "address", "internalType": "address" },
          { "name": "approveTo", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "fromAmount",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "callData", "type": "bytes", "internalType": "bytes" },
          { "name": "requiresDeposit", "type": "bool", "internalType": "bool" }
        ],
        "internalType": "struct LibSwap.SwapData[]"
      },
      {
        "name": "_stargateData",
        "type": "tuple",
        "components": [
          { "name": "dstPoolId", "type": "uint256", "internalType": "uint256" },
          {
            "name": "minAmountLD",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "dstGasForCall",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "lzFee", "type": "uint256", "internalType": "uint256" },
          {
            "name": "refundAddress",
            "type": "address",
            "internalType": "address payable"
          },
          { "name": "callTo", "type": "bytes", "internalType": "bytes" },
          { "name": "callData", "type": "bytes", "internalType": "bytes" }
        ],
        "internalType": "struct StargateFacet.StargateData"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "constructor",
    "inputs": [
      {
        "name": "_symbiosisMetaRouter",
        "type": "address",
        "internalType": "contract ISymbiosisMetaRouter"
      },
      {
        "name": "_symbiosisGateway",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "nonpayable"
  },
  { "name": "CannotBridgeToSameNetwork", "type": "error", "inputs": [] },
  { "name": "ContractCallNotAllowed", "type": "error", "inputs": [] },
  {
    "name": "CumulativeSlippageTooHigh",
    "type": "error",
    "inputs": [
      { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
      { "name": "receivedAmount", "type": "uint256", "internalType": "uint256" }
    ]
  },
  { "name": "InformationMismatch", "type": "error", "inputs": [] },
  {
    "name": "InsufficientBalance",
    "type": "error",
    "inputs": [
      { "name": "required", "type": "uint256", "internalType": "uint256" },
      { "name": "balance", "type": "uint256", "internalType": "uint256" }
    ]
  },
  { "name": "InvalidAmount", "type": "error", "inputs": [] },
  { "name": "InvalidContract", "type": "error", "inputs": [] },
  { "name": "InvalidReceiver", "type": "error", "inputs": [] },
  { "name": "NativeAssetTransferFailed", "type": "error", "inputs": [] },
  { "name": "NoSwapDataProvided", "type": "error", "inputs": [] },
  { "name": "NoSwapFromZeroBalance", "type": "error", "inputs": [] },
  { "name": "NoTransferToNullAddress", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAValidSpender", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAnERC20Token", "type": "error", "inputs": [] },
  { "name": "ReentrancyError", "type": "error", "inputs": [] },
  { "name": "SliceOutOfBounds", "type": "error", "inputs": [] },
  { "name": "SliceOverflow", "type": "error", "inputs": [] },
  {
    "name": "RubicTransferCompleted",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "receivingAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "receiver",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "RubicTransferRecovered",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "receivingAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "receiver",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "startBridgeTokensViaSymbiosis",
    "type": "function",
    "inputs": [
      {
        "name": "_bridgeData",
        "type": "tuple",
        "components": [
          {
            "name": "transactionId",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          { "name": "bridge", "type": "string", "internalType": "string" },
          {
            "name": "integrator",
            "type": "address",
            "internalType": "address"
          },
          { "name": "referrer", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          { "name": "receiver", "type": "address", "internalType": "address" },
          { "name": "refundee", "type": "address", "internalType": "address" },
          { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
          {
            "name": "destinationChainId",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "hasSourceSwaps", "type": "bool", "internalType": "bool" },
          {
            "name": "hasDestinationCall",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "internalType": "struct IRubic.BridgeData"
      },
      {
        "name": "_symbiosisData",
        "type": "tuple",
        "components": [
          {
            "name": "firstSwapCalldata",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "secondSwapCalldata",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "intermediateToken",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "bridgingToken",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "firstDexRouter",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "secondDexRouter",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "relayRecipient",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "otherSideCalldata",
            "type": "bytes",
            "internalType": "bytes"
          }
        ],
        "internalType": "struct SymbiosisFacet.SymbiosisData"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "name": "swapAndStartBridgeTokensViaSymbiosis",
    "type": "function",
    "inputs": [
      {
        "name": "_bridgeData",
        "type": "tuple",
        "components": [
          {
            "name": "transactionId",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          { "name": "bridge", "type": "string", "internalType": "string" },
          {
            "name": "integrator",
            "type": "address",
            "internalType": "address"
          },
          { "name": "referrer", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          { "name": "receiver", "type": "address", "internalType": "address" },
          { "name": "refundee", "type": "address", "internalType": "address" },
          { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
          {
            "name": "destinationChainId",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "hasSourceSwaps", "type": "bool", "internalType": "bool" },
          {
            "name": "hasDestinationCall",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "internalType": "struct IRubic.BridgeData"
      },
      {
        "name": "_swapData",
        "type": "tuple[]",
        "components": [
          { "name": "callTo", "type": "address", "internalType": "address" },
          { "name": "approveTo", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "fromAmount",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "callData", "type": "bytes", "internalType": "bytes" },
          { "name": "requiresDeposit", "type": "bool", "internalType": "bool" }
        ],
        "internalType": "struct LibSwap.SwapData[]"
      },
      {
        "name": "_symbiosisData",
        "type": "tuple",
        "components": [
          {
            "name": "firstSwapCalldata",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "secondSwapCalldata",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "intermediateToken",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "bridgingToken",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "firstDexRouter",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "secondDexRouter",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "relayRecipient",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "otherSideCalldata",
            "type": "bytes",
            "internalType": "bytes"
          }
        ],
        "internalType": "struct SymbiosisFacet.SymbiosisData"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "name": "InsufficientBalance",
    "type": "error",
    "inputs": [
      { "name": "required", "type": "uint256", "internalType": "uint256" },
      { "name": "balance", "type": "uint256", "internalType": "uint256" }
    ]
  },
  { "name": "NativeAssetTransferFailed", "type": "error", "inputs": [] },
  { "name": "NoTransferToNullAddress", "type": "error", "inputs": [] },
  { "name": "NotAContract", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAnERC20Token", "type": "error", "inputs": [] },
  { "name": "UnAuthorized", "type": "error", "inputs": [] },
  { "name": "WithdrawFailed", "type": "error", "inputs": [] },
  {
    "name": "LogWithdraw",
    "type": "event",
    "inputs": [
      {
        "name": "_assetAddress",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "_to",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "executeCallAndWithdraw",
    "type": "function",
    "inputs": [
      {
        "name": "_callTo",
        "type": "address",
        "internalType": "address payable"
      },
      { "name": "_callData", "type": "bytes", "internalType": "bytes" },
      { "name": "_assetAddress", "type": "address", "internalType": "address" },
      { "name": "_to", "type": "address", "internalType": "address" },
      { "name": "_amount", "type": "uint256", "internalType": "uint256" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "name": "withdraw",
    "type": "function",
    "inputs": [
      { "name": "_assetAddress", "type": "address", "internalType": "address" },
      { "name": "_to", "type": "address", "internalType": "address" },
      { "name": "_amount", "type": "uint256", "internalType": "uint256" }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "constructor",
    "inputs": [
      {
        "name": "_router",
        "type": "address",
        "internalType": "contract IXSwapper"
      }
    ],
    "stateMutability": "nonpayable"
  },
  { "name": "CannotBridgeToSameNetwork", "type": "error", "inputs": [] },
  { "name": "ContractCallNotAllowed", "type": "error", "inputs": [] },
  {
    "name": "CumulativeSlippageTooHigh",
    "type": "error",
    "inputs": [
      { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
      { "name": "receivedAmount", "type": "uint256", "internalType": "uint256" }
    ]
  },
  { "name": "InformationMismatch", "type": "error", "inputs": [] },
  {
    "name": "InsufficientBalance",
    "type": "error",
    "inputs": [
      { "name": "required", "type": "uint256", "internalType": "uint256" },
      { "name": "balance", "type": "uint256", "internalType": "uint256" }
    ]
  },
  { "name": "InvalidAmount", "type": "error", "inputs": [] },
  { "name": "InvalidContract", "type": "error", "inputs": [] },
  { "name": "InvalidReceiver", "type": "error", "inputs": [] },
  { "name": "NativeAssetTransferFailed", "type": "error", "inputs": [] },
  { "name": "NoSwapDataProvided", "type": "error", "inputs": [] },
  { "name": "NoSwapFromZeroBalance", "type": "error", "inputs": [] },
  { "name": "NoTransferToNullAddress", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAValidSpender", "type": "error", "inputs": [] },
  { "name": "NullAddrIsNotAnERC20Token", "type": "error", "inputs": [] },
  { "name": "ReentrancyError", "type": "error", "inputs": [] },
  { "name": "SliceOutOfBounds", "type": "error", "inputs": [] },
  { "name": "SliceOverflow", "type": "error", "inputs": [] },
  {
    "name": "RubicTransferCompleted",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "receivingAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "receiver",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "RubicTransferRecovered",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "receivingAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "receiver",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "name": "RubicTransferStarted",
    "type": "event",
    "inputs": [
      {
        "name": "bridgeData",
        "type": "tuple",
        "indexed": false,
        "components": [
          {
            "name": "transactionId",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          { "name": "bridge", "type": "string", "internalType": "string" },
          {
            "name": "integrator",
            "type": "address",
            "internalType": "address"
          },
          { "name": "referrer", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          { "name": "receiver", "type": "address", "internalType": "address" },
          { "name": "refundee", "type": "address", "internalType": "address" },
          { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
          {
            "name": "destinationChainId",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "hasSourceSwaps", "type": "bool", "internalType": "bool" },
          {
            "name": "hasDestinationCall",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "internalType": "struct IRubic.BridgeData"
      }
    ],
    "anonymous": false
  },
  {
    "name": "startBridgeTokensViaXY",
    "type": "function",
    "inputs": [
      {
        "name": "_bridgeData",
        "type": "tuple",
        "components": [
          {
            "name": "transactionId",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          { "name": "bridge", "type": "string", "internalType": "string" },
          {
            "name": "integrator",
            "type": "address",
            "internalType": "address"
          },
          { "name": "referrer", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          { "name": "receiver", "type": "address", "internalType": "address" },
          { "name": "refundee", "type": "address", "internalType": "address" },
          { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
          {
            "name": "destinationChainId",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "hasSourceSwaps", "type": "bool", "internalType": "bool" },
          {
            "name": "hasDestinationCall",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "internalType": "struct IRubic.BridgeData"
      },
      {
        "name": "_xyData",
        "type": "tuple",
        "components": [
          {
            "name": "toChainToken",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "expectedToChainTokenAmount",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "slippage", "type": "uint32", "internalType": "uint32" }
        ],
        "internalType": "struct XYFacet.XYData"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "name": "swapAndStartBridgeTokensViaXY",
    "type": "function",
    "inputs": [
      {
        "name": "_bridgeData",
        "type": "tuple",
        "components": [
          {
            "name": "transactionId",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          { "name": "bridge", "type": "string", "internalType": "string" },
          {
            "name": "integrator",
            "type": "address",
            "internalType": "address"
          },
          { "name": "referrer", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          { "name": "receiver", "type": "address", "internalType": "address" },
          { "name": "refundee", "type": "address", "internalType": "address" },
          { "name": "minAmount", "type": "uint256", "internalType": "uint256" },
          {
            "name": "destinationChainId",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "hasSourceSwaps", "type": "bool", "internalType": "bool" },
          {
            "name": "hasDestinationCall",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "internalType": "struct IRubic.BridgeData"
      },
      {
        "name": "_swapData",
        "type": "tuple[]",
        "components": [
          { "name": "callTo", "type": "address", "internalType": "address" },
          { "name": "approveTo", "type": "address", "internalType": "address" },
          {
            "name": "sendingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivingAssetId",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "fromAmount",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "callData", "type": "bytes", "internalType": "bytes" },
          { "name": "requiresDeposit", "type": "bool", "internalType": "bool" }
        ],
        "internalType": "struct LibSwap.SwapData[]"
      },
      {
        "name": "_xyData",
        "type": "tuple",
        "components": [
          {
            "name": "toChainToken",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "expectedToChainTokenAmount",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "slippage", "type": "uint32", "internalType": "uint32" }
        ],
        "internalType": "struct XYFacet.XYData"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "name": "AccessGranted",
    "type": "event",
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "method",
        "type": "bytes4",
        "indexed": true,
        "internalType": "bytes4"
      }
    ],
    "anonymous": false
  },
  {
    "name": "AccessRevoked",
    "type": "event",
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "method",
        "type": "bytes4",
        "indexed": true,
        "internalType": "bytes4"
      }
    ],
    "anonymous": false
  },
  { "name": "AddressOutOfBounds", "type": "error", "inputs": [] },
  { "name": "SliceOutOfBounds", "type": "error", "inputs": [] },
  { "name": "SliceOverflow", "type": "error", "inputs": [] },
  { "name": "UintOutOfBounds", "type": "error", "inputs": [] },
  { "name": "CalldataEmptyButInitNotZero", "type": "error", "inputs": [] },
  { "name": "FacetAddressIsNotZero", "type": "error", "inputs": [] },
  { "name": "FacetAddressIsZero", "type": "error", "inputs": [] },
  { "name": "FacetContainsNoCode", "type": "error", "inputs": [] },
  { "name": "FunctionAlreadyExists", "type": "error", "inputs": [] },
  { "name": "FunctionDoesNotExist", "type": "error", "inputs": [] },
  { "name": "FunctionIsImmutable", "type": "error", "inputs": [] },
  { "name": "IncorrectFacetCutAction", "type": "error", "inputs": [] },
  { "name": "InitReverted", "type": "error", "inputs": [] },
  { "name": "InitZeroButCalldataNotEmpty", "type": "error", "inputs": [] },
  { "name": "NoSelectorsInFace", "type": "error", "inputs": [] },
  {
    "name": "DiamondCut",
    "type": "event",
    "inputs": [
      {
        "name": "_diamondCut",
        "type": "tuple[]",
        "indexed": false,
        "components": [
          {
            "name": "facetAddress",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "action",
            "type": "uint8",
            "internalType": "enum IDiamondCut.FacetCutAction"
          },
          {
            "name": "functionSelectors",
            "type": "bytes4[]",
            "internalType": "bytes4[]"
          }
        ],
        "internalType": "struct IDiamondCut.FacetCut[]"
      },
      {
        "name": "_init",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "_calldata",
        "type": "bytes",
        "indexed": false,
        "internalType": "bytes"
      }
    ],
    "anonymous": false
  },
  {
    "name": "OwnershipTransferred",
    "type": "event",
    "inputs": [
      {
        "name": "previousOwner",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "newOwner",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "name": "FixedNativeFee",
    "type": "event",
    "inputs": [
      {
        "name": "RubicPart",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "integratorPart",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "integrator",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "name": "FixedNativeFeeCollected",
    "type": "event",
    "inputs": [
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "collector",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "name": "IntegratorTokenFeeCollected",
    "type": "event",
    "inputs": [
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "integrator",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "token",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "name": "TokenFee",
    "type": "event",
    "inputs": [
      {
        "name": "RubicPart",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "integratorPart",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "integrator",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "token",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "name": "AssetSwapped",
    "type": "event",
    "inputs": [
      {
        "name": "transactionId",
        "type": "bytes32",
        "indexed": false,
        "internalType": "bytes32"
      },
      {
        "name": "dex",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "fromAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "toAssetId",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "fromAmount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "toAmount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "timestamp",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  }
]
